---
- name: Playbook - Ansible 101 Certification | Jonathan Wilson
  hosts: localhost
  connection: local
  gather_facts: true # enabled to capture data & time data

  # Updated: Nov 14, 2023
  #
  #
  # This playbook was created for the Alta3 Ansible 101 Certification
  # 
  #
  # The Git Repo should be cloned into the top-level of the user's home drive
  #
  # A variable "dinner_time" can be set to "False" when executing the Playbook if it is not feeding time for the Astronauts; otherwise, Mangia Mangia!
  #
  # A variable "fetch_git_info" can be set to "False" when executing the Playbook to disable the display of Git Repo details
  # 
  # Sample command for starving the Astronauts and caring less about Git Repo info: "ansible-playbook ~/alta3research-ansible-cert/alta3research-ansiblecert01.yml -e dinner_time=False -e fetch_git_info=False"



  vars: # define variables available to all tasks
          fetch_git_info: True # change to false to disable displaying the Git Repo data
          astronauts: "{{ lookup('url', 'http://api.open-notify.org/astros.json') }}" # fetch astronaut data from a URL and store it 
          greeting: "Welcome home Space Crew!  You must be hungry!" # greeting message
          dinner_time: True # change to false to disable the dinner time option or set variable at the command line
          dinner_selection: # dinner options for the Astronauts
            - "Pizza"
            - "Tacos"
            - "Steak and Potatoes"
            - "Fried Chicken"
            - "Le Big Mac"
            - "Spaghetti and Meatballs"

  tasks:

          - name: Display Ansible Welcome Banner
            script: ~/alta3research-ansible-cert/scripts/welcome.pl # perl script that contains the welcome banner
            args:
              executable: /usr/bin/perl
            register: welcome_banner # store the results from the welcome.pl script


          - name: Display the Welcome Banner
            debug:
              var: welcome_banner.stdout_lines # only display the stdout_lines from the script output


          - name: Fetch Github Repo Details
            script: ~/alta3research-ansible-cert/scripts/githubinfo.sh # bash script for getting details from the Github repo
            register: github_repo_details # store the results from the github.info.sh script
            when: fetch_git_info|bool # only run this task when fetch_git_info is True


          - name: Display the Github Repo Details 
            debug:
              var: github_repo_details.stdout_lines # only display the stdout_lines from the script output
            when: fetch_git_info|bool # only run this task when fetch_git_info is True
                

          - name: Display Greeting to the Space Crew
            debug:
                    msg: "{{ greeting }} It's currently {{ ansible_date_time.month }}/{{ ansible_date_time.day }}/{{ ansible_date_time.year }} on a {{ ansible_date_time.weekday}} in case you weren't aware." # displays the greeting variable, weekday and MM/DD/YYY
            

          - name: Display Crew member name and space craft name from http://api.open-notify.org/astros.json
            debug:
                    msg: "{{ item.name }} from the space craft {{ item.craft }} has arrived. They are guest {{ ansible_loop.index }} of {{ astronauts.number }}."
                    # loop through the astronaut data fetched from the URL and display the specified data.  Ansible_loop.index is used to keep track of the loop iteration
                    # - ansible_loop.index starts the counting at 1 instead of 0 - ansible_loop.index0 would be used in that case
            loop: "{{ astronauts.people }}" # loop through the JSON list
            loop_control: # used to enable the ansible_loop.index functionality
              extended: true


          - name: Is it dinner time? # if it is dinner time then let's get the crew fed!
            debug:
                    msg: "Guess what time it is?!  That's right - it's dinner time!!  Let's get the crew fed with one of our great randomly selected meals."
            when: dinner_time|bool # display the message above only when the dinner_time variable is True


          - name: Create the dinner_guest_list.txt file in the ~/alta3research-ansible-cert/data folder
            copy:
              dest: "~/alta3research-ansible-cert/menu/dinner_guest_list.txt" # creates the dinner_guest_list.txt file for storing the meal selections
              content: "Dinner Guest List\n" # a header for the text file


          - name: Store the dinner list to send to the kitchen for preparation
            lineinfile:
                dest: "~/alta3research-ansible-cert/menu/dinner_guest_list.txt"
                line: "{{ ansible_date_time.iso8601 }}: {{ item.name }} will be having {{ dinner_selection|random }}."
                    # loop through the astronaut data fetched from the URL and display the specified data.  The dinner_selection variable will be randomized for the crew.
            loop: "{{ astronauts.people }}" # loop through the JSON list
            when: dinner_time|bool # display the message above only when the dinner_time variable is True


          - name: Display the contents of the dinner_guest_list.txt file
            debug: var=item # displays the contents of the file under the with_file section
            with_file:
                - "~/alta3research-ansible-cert/menu/dinner_guest_list.txt" # use the dinner_guest_list.txt file as the input
